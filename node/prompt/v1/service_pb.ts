// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension="
// @generated from file prompt/v1/service.proto (package prompt.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";
import { Prompt } from "./models_pb";

/**
 * @generated from message prompt.v1.ListPromptsResponse
 */
export class ListPromptsResponse extends Message<ListPromptsResponse> {
  /**
   * @generated from field: repeated prompt.v1.Prompt prompts = 1;
   */
  prompts: Prompt[] = [];

  constructor(data?: PartialMessage<ListPromptsResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "prompt.v1.ListPromptsResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "prompts", kind: "message", T: Prompt, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ListPromptsResponse {
    return new ListPromptsResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ListPromptsResponse {
    return new ListPromptsResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ListPromptsResponse {
    return new ListPromptsResponse().fromJsonString(jsonString, options);
  }

  static equals(a: ListPromptsResponse | PlainMessage<ListPromptsResponse> | undefined, b: ListPromptsResponse | PlainMessage<ListPromptsResponse> | undefined): boolean {
    return proto3.util.equals(ListPromptsResponse, a, b);
  }
}

/**
 * @generated from message prompt.v1.CreatePromptRequest
 */
export class CreatePromptRequest extends Message<CreatePromptRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string description = 2;
   */
  description = "";

  /**
   * @generated from field: string template = 3;
   */
  template = "";

  /**
   * @generated from field: google.protobuf.Struct metadata = 4;
   */
  metadata?: Struct;

  constructor(data?: PartialMessage<CreatePromptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "prompt.v1.CreatePromptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "template", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "metadata", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePromptRequest {
    return new CreatePromptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePromptRequest {
    return new CreatePromptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePromptRequest {
    return new CreatePromptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePromptRequest | PlainMessage<CreatePromptRequest> | undefined, b: CreatePromptRequest | PlainMessage<CreatePromptRequest> | undefined): boolean {
    return proto3.util.equals(CreatePromptRequest, a, b);
  }
}

/**
 * @generated from message prompt.v1.CreatePromptResponse
 */
export class CreatePromptResponse extends Message<CreatePromptResponse> {
  /**
   * @generated from field: string id = 1;
   */
  id = "";

  /**
   * @generated from field: string name = 2;
   */
  name = "";

  /**
   * @generated from field: string description = 3;
   */
  description = "";

  /**
   * @generated from field: string template = 4;
   */
  template = "";

  /**
   * @generated from field: google.protobuf.Struct metadata = 5;
   */
  metadata?: Struct;

  constructor(data?: PartialMessage<CreatePromptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "prompt.v1.CreatePromptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "description", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "template", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "metadata", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CreatePromptResponse {
    return new CreatePromptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CreatePromptResponse {
    return new CreatePromptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CreatePromptResponse {
    return new CreatePromptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: CreatePromptResponse | PlainMessage<CreatePromptResponse> | undefined, b: CreatePromptResponse | PlainMessage<CreatePromptResponse> | undefined): boolean {
    return proto3.util.equals(CreatePromptResponse, a, b);
  }
}

/**
 * @generated from message prompt.v1.GetPromptRequest
 */
export class GetPromptRequest extends Message<GetPromptRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  constructor(data?: PartialMessage<GetPromptRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "prompt.v1.GetPromptRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromptRequest {
    return new GetPromptRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromptRequest {
    return new GetPromptRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromptRequest {
    return new GetPromptRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromptRequest | PlainMessage<GetPromptRequest> | undefined, b: GetPromptRequest | PlainMessage<GetPromptRequest> | undefined): boolean {
    return proto3.util.equals(GetPromptRequest, a, b);
  }
}

/**
 * @generated from message prompt.v1.GetPromptResponse
 */
export class GetPromptResponse extends Message<GetPromptResponse> {
  /**
   * @generated from field: prompt.v1.Prompt prompt = 1;
   */
  prompt?: Prompt;

  constructor(data?: PartialMessage<GetPromptResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "prompt.v1.GetPromptResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "prompt", kind: "message", T: Prompt },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromptResponse {
    return new GetPromptResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromptResponse {
    return new GetPromptResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromptResponse {
    return new GetPromptResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromptResponse | PlainMessage<GetPromptResponse> | undefined, b: GetPromptResponse | PlainMessage<GetPromptResponse> | undefined): boolean {
    return proto3.util.equals(GetPromptResponse, a, b);
  }
}

/**
 * @generated from message prompt.v1.GetPromptValueRequest
 */
export class GetPromptValueRequest extends Message<GetPromptValueRequest> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: google.protobuf.Struct data = 2;
   */
  data?: Struct;

  constructor(data?: PartialMessage<GetPromptValueRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "prompt.v1.GetPromptValueRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "data", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromptValueRequest {
    return new GetPromptValueRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromptValueRequest {
    return new GetPromptValueRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromptValueRequest {
    return new GetPromptValueRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromptValueRequest | PlainMessage<GetPromptValueRequest> | undefined, b: GetPromptValueRequest | PlainMessage<GetPromptValueRequest> | undefined): boolean {
    return proto3.util.equals(GetPromptValueRequest, a, b);
  }
}

/**
 * @generated from message prompt.v1.GetPromptValueResponse
 */
export class GetPromptValueResponse extends Message<GetPromptValueResponse> {
  /**
   * @generated from field: string data = 1;
   */
  data = "";

  constructor(data?: PartialMessage<GetPromptValueResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "prompt.v1.GetPromptValueResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "data", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetPromptValueResponse {
    return new GetPromptValueResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetPromptValueResponse {
    return new GetPromptValueResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetPromptValueResponse {
    return new GetPromptValueResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetPromptValueResponse | PlainMessage<GetPromptValueResponse> | undefined, b: GetPromptValueResponse | PlainMessage<GetPromptValueResponse> | undefined): boolean {
    return proto3.util.equals(GetPromptValueResponse, a, b);
  }
}

